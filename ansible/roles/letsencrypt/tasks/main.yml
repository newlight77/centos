---

- name: load variables.
  include_vars: "letencrypt_vars.yml"

- name: Ensure certbot is installed.
  package:
    name: '{{ item }}'
    state: present
  become: yes
  with_items:
    - epel-release
    - certbot
    - certbot-apache
    - certbot-nginx

- name: Ensure webroot exists
  file:
    path: "{{ letsencrypt.webroot_path }}"
    state: directory
    follow: yes
  become: yes

- debug:
    msg: "command webserver is running : {{ letsencrypt.command }} -a webroot --webroot-path {{ letsencrypt.webroot_path }} certonly"

- name: Attempt to get the certificate using webroot authenticator
  command: "{{ letsencrypt.command }} -a webroot --webroot-path {{ letsencrypt.webroot_path }} certonly"
  args:
    creates: "/etc/letsencrypt/live/{{ letsencrypt.certificate_name }}"
  ignore_errors: True
  when: letsencrypt.authenticator == "webroot"
  become: yes

- debug:
    msg: "command webserver is not running : {{ letsencrypt.command }} -a webroot --webroot-path {{ letsencrypt.webroot_path }} certonly"

- name: Attempt to get the certificate using the standalone authenticator (in case the webserver is not running)
  command: "{{ letsencrypt.standalone_command }}"
  args:
    creates: "/etc/letsencrypt/live/{{ letsencrypt.certificate_name }}"
  become: yes

- name: Fix the renewal file
  ini_file:
    section: renewalparams
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    dest: "/etc/letsencrypt/renewal/{{ letsencrypt.certificate_name }}.conf"
  with_dict:
    os_packages_only: False
    verb: certonly
    noninteractive_mode: False
    uir: False
    hsts: False
    authenticator: "{{letsencrypt.authenticator}}"
  become: yes

- name: Ensure renewal directory exists
  file:
    path: "/etc/letsencrypt/renewal"
    state: directory
    follow: yes
  become: yes

- name: Fix the webroot map in the renewal file
  ini_file:
    section: "[webroot_map]"
    option: "{{ item }}"
    value: "{{ letsencrypt.webroot_path }}"
    dest: "/etc/letsencrypt/renewal/{{ letsencrypt.certificate_name }}.conf"
  become: yes
  with_items: "{{ letsencrypt.domains }}"

- name: Install renewal cron
  become: yes
  cron:
    name: "Let's Encrypt Renewal"
    day: "{{ letsencrypt.renewal_frequency.day }}"
    hour: "{{ letsencrypt.renewal_frequency.hour }}"
    minute: "{{ letsencrypt.renewal_frequency.minute }}"
    job: "{{ letsencrypt.renewal_command }}"

